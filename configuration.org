* use-package
#+BEGIN_SRC emacs-lisp
(require 'package)
(setq package-enable-at-startup nil)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  ;; Following line is not needed if use-package.el is in ~/.emacs.d
  (add-to-list 'load-path "~/.emacs.d/packages")
  (require 'use-package))

#+END_SRC
* General
** Use /y-or-n-p/
#+BEGIN_SRC emacs-lisp :results output silent
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

* Org-Babel
#+BEGIN_SRC emacs-lisp
(use-package org
  :ensure t
  :defer t
  :init 
   (org-babel-do-load-languages
     'org-babel-load-languages
     '((emacs-lisp . t)
       (sh . t)
      )
    )
)
#+END_SRC
* YAML
#+BEGIN_SRC emacs-lisp
(use-package yaml-mode
  :ensure t
  :init
)
#+END_SRC

#+RESULTS:

* Shell
#+BEGIN_SRC emacs-lisp
(use-package shell
  :ensure t
  :init
)
#+END_SRC

* Magit
#+BEGIN_SRC emacs-lisp
(use-package magit
  :ensure t
  :bind (("C-x g" . magit-status))
  :init)
#+END_SRC

#+RESULTS:
: magit-status

* Backups und Autosave
#+BEGIN_SRC emacs-lisp
(setq make-backup-files nil) ; stop creating backup~ files
(setq auto-save-default nil) ; stop creating #autosave# files
#+END_SRC
* UI
** /menubar/, /toolbar/ und /scrollbar/ ausschalten
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
#+END_SRC

** /hl-line/
#+BEGIN_SRC emacs-lisp
(global-hl-line-mode +1)
#+END_SRC

#+RESULTS:
: t

** /theme/ laden
#+BEGIN_SRC emacs-lisp
(use-package solarized-theme
  :init (load-theme 'solarized-dark t)
  :ensure t)
(use-package spacemacs-theme
  :defer t
  :init (load-theme 'spacemacs-light t))
#+END_SRC

#+RESULTS:

   
   
